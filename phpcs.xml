<?xml version="1.0"?>
<ruleset>
    <!-- Code MUST follow all rules outlined in PSR-1. -->
    <rule ref="PSR1"/>

    <!-- All PHP files MUST use the Unix LF (linefeed) line ending only. -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <!-- All PHP files MUST end with a non-blank line, terminated with a single LF. -->
    <rule ref="PSR2.Files.EndFileNewline"/>

    <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->
    <rule ref="PSR2.Files.ClosingTag"/>

    <!-- There MUST NOT be a hard limit on line length.
    The soft limit on line length MUST be 120 characters.
    Lines SHOULD NOT be longer than 80 characters; lines longer than that SHOULD be split into multiple subsequent lines of no more than 80 characters each. -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!-- There MUST NOT be trailing whitespace at the end of lines.
    Blank lines MAY be added to improve readability and to indicate related blocks of code except where explicitly forbidden. -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>0</severity>
    </rule>

    <!-- There MUST NOT be more than one statement per line. -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

    <!-- Code MUST use an indent of 4 spaces for each indent level, and MUST NOT use tabs for indenting. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT"/>
                <element value="T_DOC_COMMENT_OPEN_TAG"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <!-- Visibility MUST be declared on all methods. -->
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

    <!-- Method and function names MUST NOT be declared with space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

    <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->
    <!-- When using the reference operator & before an argument, there MUST NOT be a space after it. -->
    <!-- There MUST NOT be a space between the variadic three dot operator and the argument name. -->
    <!-- When combining both the reference operator and the variadic three dot operator, there MUST NOT be any space between the two of them. -->
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>

    <!-- The keyword elseif SHOULD be used instead of else if so that all control keywords look like single words. -->
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>

    <!-- Expressions in parentheses MAY be split across multiple lines, where each subsequent line is indented at least once. When doing so, the first condition MUST be on the next line. The closing parenthesis and opening brace MUST be placed together on their own line with one space between them. Boolean operators between conditions MUST always be at the beginning or at the end of the line, not a mix of both. -->
    <!-- checked by PSR12.ControlStructures.ControlStructureSpacing -->
    <!-- checked by PSR12.ControlStructures.BooleanOperatorPlacement -->
    <!-- checked by Squiz.ControlStructures.ControlSignature -->
</ruleset>